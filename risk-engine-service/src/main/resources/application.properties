spring.application.name=Payment
flyway.schemas=public
flyway.baselineOnMigrate=true
spring.flyway.locations=classpath:db/migration
flyway.url=jdbc:${PG_CONNECTION_STRING}
flyway.user=postgres
flyway.password=password

spring.datasource.url=jdbc:${PG_CONNECTION_STRING}
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Disable Hibernate usage of JDBC metadata
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false

# Database initialization should typically be performed outside of Spring lifecycle
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=never

server.port=8081

spring.datasource.hikari.schema=public

http.allowed-origins=http://localhost:3000,http://test.com
http.allowed-methods=GET,POST,OPTIONS,PUT,DELETE
http.max-age=3600

authentication.permit-paths=/v1/internal/**, /actuator/health

spring.kafka.bootstrap-servers=${KAFKA_CONNECTION_STRING}

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.kafka.consumer.value-deserializer.trusted.packages=com.example.payment.common.dto
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=manual

com.example.payment.risk-engine.payments-topic.name=payments-topic
com.example.payment.risk-engine.payments-topic.consumerGroup=risk-engine-consumer-group-1
com.example.payment.risk-engine-service.riskEngineThreshold=0.3

spring.jpa.properties.packagesToScan=com.example.payment.common.model,com.example.riskengine.model
